name: 'Cancel Expo EAS Builds'
description: 'Cancel EAS builds that are in queue or in progress'
inputs:
  build-limit:
    description: 'Limit the amount of build to check. Default to the last 10 builds.'
    required: false
    default: '10'
runs:
  using: 'composite'
  steps:
    - name: step-1
      shell: bash
      run: |
        npx -p eas-cli eas build:list --limit=${{ inputs.build-limit }}
    - name: step-2
      shell: bash
      run: |
        npx -p eas-cli eas build:list --limit=${{ inputs.build-limit }} |
          grep -B 3 "Status *\(in queue\|in progress\)"
    - name: step-3
      shell: bash
      run: |
        npx -p eas-cli eas build:list --limit=${{ inputs.build-limit }} |
          grep -B 3 "Status *\(in queue\|in progress\)" |
          grep ID
    - name: step-4
      shell: bash
      run: |
        npx -p eas-cli eas build:list --limit=${{ inputs.build-limit }} |
          grep -B 3 "Status *\(in queue\|in progress\)" |
          grep ID |
          sed -e 's|ID[[:space:]]\+||'
    - name: step-5
      shell: bash
      run: |
        npx -p eas-cli eas build:list --limit=${{ inputs.build-limit }} |
          grep -B 3 "Status *\(in queue\|in progress\)" |
          grep ID |
          sed -e 's|ID[[:space:]]\+||' |
          tr '\n' '\0'
    - name: step-6
      shell: bash
      run: |
        npx -p eas-cli eas build:list --limit=${{ inputs.build-limit }} |
          grep -B 3 "Status *\(in queue\|in progress\)" |
          grep ID |
          sed -e 's|ID[[:space:]]\+||' |
          tr '\n' '\0' |
          xargs -0 -n1 --no-run-if-empty npx eas build:cancel
    # - id: cancel-eas-builds
    #   shell: bash
    #   run: |
    #     npx -p eas-cli eas build:list --limit=${{ inputs.build-limit }} |
    #       grep -B 3 "Status *\(in queue\|in progress\)" |
    #       grep ID |
    #       sed -e 's|ID[[:space:]]\+||' |
    #       tr '\n' '\0' |
    #       xargs -0 -n1 --no-run-if-empty npx eas build:cancel
